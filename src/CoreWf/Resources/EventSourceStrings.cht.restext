event_ActionItemCallbackInvoked=IO 執行緒排程器回呼已叫用。
event_ActionItemScheduled=IO 執行緒排程器回呼已叫用。
event_ActivityCompleted=活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 已經以 '{3}' 狀態完成。
event_ActivityScheduled=父活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 已排程子活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_AppDomainUnload=正在卸載 AppDomain。AppDomain.FriendlyName {0}、ProcessName {1}、ProcessId {2}。
event_AspNetRoute=已加入具有 serviceType '{1}' 和 serviceHostFactoryType '{2}' 的新 Asp.Net 路由 '{0}'。
event_AspNetRoutingService=傳入要求符合 Asp.Net 路由中所定義且位址為 {0} 的 WCF 服務。
event_BinaryMessageDecodingStart=BinaryMessageEncoder 開始解碼訊息。
event_BinaryMessageEncodingStart=BinaryMessageEncoder 開始編碼訊息。
event_BookmarkScopeInitialized=已用識別碼: '{1}' 初始化具有 TemporaryId: '{0}' 的 BookmarkScope。
event_BufferedAsyncWriteStart=BufferId:{0} 已完成寫入 '{1}' 個位元組至基礎資料流。
event_BufferedAsyncWriteStop=訊息由編碼器非同步寫入。
event_BufferOutOfOrderMessageNoBookmark=目前無法在服務執行個體 '{0}' 上執行作業 '{1}'。將在服務執行個體準備就緒可以處理這個特定作業時，再次嘗試。
event_BufferOutOfOrderMessageNoInstance=目前無法執行作業 '{0}'。將在服務執行個體準備就緒可以處理這個特定作業時，再次嘗試。
event_BufferPoolAllocation=集區正在配置 {0} 位元組。
event_BufferPoolChangeQuota=BufferPool 的大小為 {0}，正由 {1} 變更配額。
event_CacheRootMetadataStart=CacheRootMetadata 已在活動 '{0}' 上啟動。
event_CacheRootMetadataStop=CacheRootMetadata 已在活動 '{0}' 上停止。
event_CBAEntryRead=已處理 ServiceActivation 元素相對位址:'{0}'，標準化的相對位址 '{1}'。
event_CBAMatchFound=傳入要求符合位址為 '{0}' 的 ServiceActivation 元素。
event_ChannelFactoryCreated=建立 ChannelFactory。
event_ChannelInitializationTimeout={0}
event_ChannelReceiveStart=ChannelHandlerId:{0} - 訊息接收迴圈已啟動。
event_ChannelReceiveStop=ChannelHandlerId:{0} - 訊息接收迴圈已停止。
event_ClientBaseCachedChannelFactoryCount=快取通道處理站的數目為: '{0}'。最多可以快取 '{1}' 個通道處理站。
event_ClientBaseChannelFactoryAgedOutofCache=通道處理站已過時超出快取範圍，因為快取已達其 '{0}' 的限制。
event_ClientBaseChannelFactoryCacheHit=使用快取中找到的相符通道處理站。
event_ClientBaseUsingLocalChannelFactory=未從快取使用通道處理站，亦即執行個體停用快取。
event_ClientChannelOpenStart=ServiceChannel 開啟開始。
event_ClientChannelOpenStop=ServiceChannel 開啟停止。
event_ClientFormatterDeserializeReplyStart=用戶端已啟動還原序列化回覆訊息。
event_ClientFormatterDeserializeReplyStop=用戶端已完成還原序列化回覆訊息。
event_ClientFormatterSerializeRequestStart=用戶端要求序列化已啟動。
event_ClientFormatterSerializeRequestStop=用戶端已完成要求訊息的序列化。
event_ClientMessageInspectorAfterReceiveInvoked=Dispatcher 已在型別 '{0}' 的 ClientMessageInspector 上叫用 'AfterReceiveReply'。
event_ClientMessageInspectorBeforeSendInvoked=Dispatcher 已在型別 '{0}' 的 ClientMessageInspector 上叫用 'BeforeSendRequest'。
event_ClientOperationPrepared=用戶端正在執行與 '{1}' 合約關聯的 '{0}' 動作。訊息將傳送到 '{2}'。
event_ClientParameterInspectorAfterCallInvoked=Dispatcher 已在型別 '{0}' 的 ClientParameterInspector 上叫用 'AfterCall'。
event_ClientParameterInspectorBeforeCallInvoked=Dispatcher 已在型別 '{0}' 的 ClientParameterInspector 上叫用 'BeforeCall'。
event_ClientReliableSessionReconnect=SessionId:{0} 重新連線中。
event_ClientSendPreambleStart=用戶端傳送前序編碼開始。
event_ClientSendPreambleStop=用戶端傳送前序編碼停止。
event_CloseTimeout={0}
event_CompensationState=CompensableActivity '{0}' 處於 '{1}' 狀態。
event_CompilationStart=開始編譯
event_CompilationStop=結束編譯
event_CompileVbExpressionStart=編譯 VB 運算式 '{0}'
event_CompileVbExpressionStop=完成編譯 VB 運算式。
event_CompleteBookmarkWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 BookmarkWorkItem。BookmarkName: {3}、BookmarkScope: {4}。
event_CompleteCancelActivityWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 CancelActivityWorkItem。
event_CompleteCompletionWorkItem=已完成父活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 CompletionWorkItem。已完成活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_CompleteExecuteActivityWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 ExecuteActivityWorkItem。
event_CompleteFaultWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 FaultWorkItem。例外狀況傳播源自活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_CompleteRuntimeWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的執行階段工作項目。
event_CompleteTransactionContextWorkItem=已完成活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 TransactionContextWorkItem。
event_ConcurrentCallsRatio=同時呼叫的比例: {0}/{1}
event_ConcurrentInstancesRatio=並行的執行個體比例: {0}/{1}
event_ConcurrentSessionsRatio=並行的工作階段比例: {0}/{1}
event_ConnectionPoolMiss={0} 的集區沒有可用的連接和 {1} 忙碌的連線。
event_ConnectionPoolPreambleFailed=ConnectionPoolPreambleFailed。
event_ConnectionReaderSendFault=連線讀取器正在傳送錯誤 '{0}'。 
event_CreateBookmark=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 建立書籤。BookmarkName: {3}、BookmarkScope: {4}。
event_CreateBookmarkScope=已建立 BookmarkScope: {0}。
event_CreateServiceHostStart=開始 CreateServiceHost
event_CreateServiceHostStop=結束 CreateServiceHost
event_CreateWorkflowServiceHostStart=CreateWorkflowServiceHost 開始
event_CreateWorkflowServiceHostStop=CreateWorkflowServiceHost 停止
event_DCDeserializeWithSurrogateStart=DataContract 使用代理還原序列化 {0} 開始。
event_DCDeserializeWithSurrogateStop=DataContract 使用代理還原序列化停止。
event_DCGenReaderStart=DataContract 產生 {1} 的 {0} 讀取器開始。
event_DCGenReaderStop=DataContract 產生停止。
event_DCGenWriterStart=DataContract 產生 {1} 的 {0} 寫入器開始。
event_DCGenWriterStop=DataContract 產生寫入器停止。
event_DCJsonGenReaderStart=Json 產生 {1} 的 {0} 讀取器開始。
event_DCJsonGenReaderStop=Json 讀取器產生停止。
event_DCJsonGenWriterStart=Json 產生 {1} 的 {0} 寫入器開始。
event_DCJsonGenWriterStop=Json 產生寫入器停止。
event_DCResolverResolve=解析 {0} 的 DataContract 解析程式開始。
event_DCSerializeWithSurrogateStart=DataContract 使用代理序列化 {0} 開始。
event_DCSerializeWithSurrogateStop=DataContract 使用代理序列化停止。
event_DecrementBusyCount=DecrementBusyCount 已呼叫。來源 : {0}
event_DiscoveryClientInClientChannelFailedToClose=在 DiscoveryClientChannel 中建立的 DiscoveryClient 無法關閉，因此已經中止。
event_DiscoveryClientProtocolExceptionSuppressed=ProtocolException 在關閉 DiscoveryClient 的同時是隱藏的。這可能是因為 DiscoveryService 仍在嘗試傳送回應給 DiscoveryClient。
event_DiscoveryClientReceivedMulticastSuppression=DiscoveryClient 收到來自 DiscoveryProxy 的多點傳送隱藏訊息。
event_DiscoveryMessageReceivedAfterOperationCompleted=messageId='{1}' 的 {0} 訊息已遭 DiscoveryClient 丟棄，因為對應的 {2} 作業已完成。
event_DiscoveryMessageWithInvalidContent=messageId='{1}' 的 {0} 訊息已遭丟棄，因為它的內容無效。
event_DiscoveryMessageWithInvalidRelatesToOrOperationCompleted=messageId='{1}' 且 relatesTo='{2}' 的 {0} 訊息已由 DiscoveryClient 丟棄，因為對應的 {3} 作業已完成，或是 relatesTo 值無效。
event_DiscoveryMessageWithInvalidReplyTo=messageId='{0}' 的探索要求訊息已遭丟棄，因為它的 ReplyTo 地址無效。
event_DiscoveryMessageWithNoContent={0} 訊息已遭丟棄，因為它沒有任何內容。
event_DiscoveryMessageWithNullMessageId={0} 訊息已遭丟棄，因為訊息標頭未包含必要的 MessageId 屬性。
event_DiscoveryMessageWithNullMessageSequence=messageId='{1}' 的 {0} 訊息已遭 DiscoveryClient 丟棄，因為它沒有 DiscoveryMessageSequence 屬性。
event_DiscoveryMessageWithNullRelatesTo=messageId='{1}' 的 {0} 訊息已遭 DiscoveryClient 丟棄，因為訊息標頭未包含必要的 RelatesTo 屬性。
event_DiscoveryMessageWithNullReplyTo=messageId='{0}' 的探索要求訊息已遭丟棄，因為它沒有 ReplyTo 地址。
event_DispatchFailed='{0}' 作業發送有錯誤。
event_DispatchFormatterDeserializeRequestStart=發送器已啟動還原序列化要求訊息。
event_DispatchFormatterDeserializeRequestStop=發送器已完成還原序列化要求訊息。
event_DispatchFormatterSerializeReplyStart=發送器已啟動回覆訊息的序列化。
event_DispatchFormatterSerializeReplyStop=發送器已完成回覆訊息的序列化。
event_DispatchMessageBeforeAuthorization=啟動訊息發送的授權
event_DispatchMessageStart=訊息發送已啟動。
event_DispatchMessageStop=訊息發送已完成
event_DispatchSessionFailed=工作階段分派失敗。
event_DispatchSessionStart=工作階段分派已啟動。
event_DispatchSessionSuccess=工作階段分派成功。
event_DispatchSuccessful='{0}' 作業成功發送。
event_DuplicateCorrelationQuery=發現 Where='{0}' 的重複 CorrelationQuery。計算相互關聯時不會使用這個重複的查詢。
event_DuplicateDiscoveryMessage=messageId='{1}' 的 {0} 訊息已遭丟棄，因為它是重複項目。
event_EncryptedDataProcessingStart=已開始處理加密的資料。
event_EncryptedDataProcessingSuccess=已成功處理加密的資料。
event_EndpointDiscoverabilityDisabled=EndpointAddress='{0}' 且 ListenUri='{1}' 的端點可搜尋性已遭停用。
event_EndpointDiscoverabilityEnabled=EndpointAddress='{0}' 且 ListenUri='{1}' 的端點可搜尋性已經啟用。
event_EndSqlCommandExecute=結束 SQL 命令執行: {0}
event_EnterNoPersistBlock=正在進入無持續性區塊。
event_ErrorHandlerInvoked=Dispatcher 已叫用具有型別 '{2}' 例外狀況之型別 '{0}' 的 ErrorHandler。ErrorHandled == '{1}'。
event_EstablishConnectionStart=已啟動 {0} 的連線建立。
event_EstablishConnectionStop=建立連線。
event_EtwUnhandledException=未處理的例外狀況。例外狀況詳細資料: {0}
event_ExecuteWorkItemStart=執行工作項目開始
event_ExecuteWorkItemStop=執行工作項目停止
event_ExitNoPersistBlock=正在結束無持續性區塊。
event_FailFastException=FailFastException。
event_FaultProviderInvoked=Dispatcher 已叫用具有型別 '{1}' 例外狀況之型別 '{0}' 的 FaultProvider。
event_FederationMessageCreationStarted=正在從啟動的表單張貼建立同盟訊息。
event_FederationMessageCreationSuccess=已成功從表單張貼建立同盟訊息。
event_FederationMessageProcessingStarted=已開始處理同盟訊息。
event_FederationMessageProcessingSuccess=已成功處理同盟訊息。
event_FindInitiatedInDiscoveryClientChannel=DiscoveryClientChannel 中已初始化尋找作業以探索端點。
event_FlowchartEmpty=流程圖 '{0}' - 已執行，但沒有任何節點。
event_FlowchartNextNull=流程圖 '{0}'/FlowStep - 下一個節點是 null。流程圖執行將結束。
event_FlowchartStart=流程圖 '{0}' - 已排程 Start。
event_FlowchartSwitchCase=流程圖 '{0}'/FlowSwitch - 已選取案例 '{1}'。
event_FlowchartSwitchCaseNotFound=流程圖 '{0}'/FlowSwitch - 找不到符合運算式結果的案例活動或預設案例。流程圖執行將結束。
event_FlowchartSwitchDefault=流程圖 '{0}'/FlowSwitch - 已選取預設案例。
event_FoundProcessingError=命令失敗: {0}
event_GenXmlSerializableStart='{0}' 的產生 Xml 可序列化開始。
event_GenXmlSerializableStop=產生 Xml 可序列化停止。
event_GetIssuerNameFailure=擷取 tokenId:{0} 中的簽發者名稱失敗。
event_GetIssuerNameSuccess=擷取 tokenId:{1} 中的簽發者名稱:{0} 成功。
event_GetServiceInstanceStart=服務執行個體擷取已啟動。
event_GetServiceInstanceStop=服務執行個體已擷取。
event_HandledException=正在處理例外狀況。例外狀況詳細資料: {0}
event_HandledExceptionError=正在處理例外狀況。例外狀況詳細資料: {0}
event_HandledExceptionVerbose=正在處理例外狀況。例外狀況詳細資料: {0}
event_HandledExceptionWarning=正在處理例外狀況。例外狀況詳細資料: {0}
event_HostedTransportConfigurationManagerConfigInitStart=HostedTransportConfigurationManager 開始組態初始化
event_HostedTransportConfigurationManagerConfigInitStop=HostedTransportConfigurationManager 結束組態初始化
event_HttpAuthFailed=HTTP 驗證失敗。
event_HttpChannelRequestAborted=HTTP 通道要求中止。
event_HttpChannelResponseAborted=HTTP 通道回應中止。
event_HttpContextBeforeProcessAuthentication=啟動訊息發送的驗證
event_HttpGetContextStart=HttpGetContext 開始。
event_HttpHandlerPickedForUrl=URL '{0}' 裝載了具有根元素型別 '{1}' 的 XAML 文件。系統挑選 HTTP 處理常式型別 '{2}' 來服務對這個 URL 提出的所有要求。
event_HttpMessageReceiveFailed=HTTP 訊息接收失敗。
event_HttpMessageReceiveStart=從 HTTP 傳輸接收到的訊息。
event_HttpPipelineBeginProcessInboundRequestStart=Http 訊息處理常式已開始以非同步方式處理輸入要求。
event_HttpPipelineBeginProcessResponseStart=Http 訊息處理常式已開始以非同步方式處理回應。
event_HttpPipelineFaulted=Http 訊息處理常式發生錯誤。
event_HttpPipelineProcessInboundRequestStart=Http 訊息處理常式已開始處理輸入要求。
event_HttpPipelineProcessInboundRequestStop=Http 訊息處理常式已完成輸入要求的處理。
event_HttpPipelineProcessResponseStart=Http 訊息處理常式已開始處理回應。
event_HttpPipelineProcessResponseStop=Http 訊息處理常式已完成回應的處理。
event_HttpPipelineTimeoutException=WebSocket 連接逾時。
event_HttpResponseReceiveStart=HTTP 傳輸開始接收訊息。
event_HttpSendMessageStart=HTTP 傳送要求開始。
event_HttpSendStop=HTTP 傳送要求停止。
event_HttpSendStreamedMessageStart=HTTP 傳送資料流訊息已啟動。
event_IdleServicesClosed=超出 {1} 之啟動服務總數的 {0} 閒置服務已關閉。
event_IdleTimeout={0} 連接集區索引鍵: {1}
event_ImportKnownTypesStart=ImportKnownTypes 開始。
event_ImportKnownTypesStop=ImportKnownTypes 停止。
event_InactivityTimeout={0}
event_InArgumentBound=活動 '{1}'、DisplayName: '{2}'、InstanceId: '{3}' 上的輸入引數 '{0}' 已經與下列值繫結: {4}。
event_IncomingMessageVerified=內送郵件已經過驗證。
event_IncrementBusyCount=IncrementBusyCount 已呼叫。來源 : {0}
event_InferredContractDescription=已從 WorkflowService 推斷出 Name='{0}' 且 Namespace='{1}' 的 ContractDescription。
event_InferredOperationDescription=已從 WorkflowService 推斷出合約 '{1}' 中 Name='{0}' 的 OperationDescription。IsOneWay={2}
event_InnerChannelCreationFailed=DiscoveryClientChannel 無法以 EndpointAddress='{0}' 且 Via='{1}' 的探索結果端點建立通道。DiscoveryClientChannel 現在將使用下一個可用的探索結果端點。
event_InnerChannelOpenFailed=DiscoveryClientChannel 無法以 EndpointAddress='{0}' 且 Via='{1}' 的探索結果端點開啟通道。DiscoveryClientChannel 現在將使用下一個可用的探索結果端點。
event_InnerChannelOpenSucceeded=DiscoveryClientChannel 已順利探索到端點，並用它開啟了通道。用戶端已使用 EndpointAddress='{0}' 和 Via='{1}' 連接到服務。
event_InstanceLocksRecoveryError=復原執行個體鎖定失敗，因為發生下列例外狀況
event_InternalCacheMetadataStart=InternalCacheMetadata 已在活動 '{0}' 上啟動。
event_InternalCacheMetadataStop=InternalCacheMetadata 已在活動 '{0}' 上停止。
event_InvokedMethodThrewException=在活動 '{0}' 呼叫的方法中發生例外狀況。{1}
event_InvokeMethodDoesNotUseAsyncPattern=InvokeMethod '{0}' - 方法未使用非同步模式。
event_InvokeMethodIsNotStatic=InvokeMethod '{0}' - 方法不是靜態方法。
event_InvokeMethodIsStatic=InvokeMethod '{0}' - 方法是靜態方法。
event_InvokeMethodUseAsyncPattern=InvokeMethod '{0}' - 方法使用 '{1}' 和 '{2}' 非同步模式。
event_JsonMessageDecodingStart=JsonMessageEncoder 開始解碼訊息。
event_JsonMessageEncodingStart=JsonMessageEncoder 開始編碼訊息。
event_LeaseTimeout={0} 連接集區索引鍵: {1}
event_ListenerOpenStart=開啟 '{0}' 的接聽項。
event_ListenerOpenStop=完成接聽項開啟。
event_LockRetryTimeout=嘗試擷取執行個體鎖定時發生逾時。無法在預定逾時 {0} 內完成作業。分配給此作業的時間可能是較長逾時的一部分。
event_MaximumRetriesExceededForSqlCommand=放棄重試 SQL 命令，因為已經執行了重試次數上限。
event_MaxInstancesExceeded=系統已達針對節流 'MaxConcurrentInstances' 所設定的限制。此節流的限制設為 {0}。若要變更節流值，請修改 serviceThrottle 元素中的屬性 'maxConcurrentInstances'，或修改行為 ServiceThrottlingBehavior 的 'MaxConcurrentInstances' 屬性。
event_MaxOutboundConnectionsPerEndpointExceeded={0}
event_MaxPendingConnectionsExceeded={0}
event_MaxPendingMessagesPerChannelExceeded=已達到 '{0}' 的節流 'MaxPendingMessagesPerChannel' 限制。若要增加此限制，請調整 BufferedReceiveServiceBehavior 上的 MaxPendingMessagesPerChannel 屬性。
event_MaxReceivedMessageSizeExceeded={0}
event_MaxRetryCyclesExceededMsmq=在識別碼為 '{0}' 之 MSMQ 訊息上已超過最大重試循環
event_MaxSentMessageSizeExceeded={0}
event_MaxSessionSizeReached={0}
event_MessageInspectorAfterReceiveInvoked=Dispatcher 已在型別 '{0}' 的 MessageInspector 上叫用 'AfterReceiveReply'。
event_MessageInspectorBeforeSendInvoked=Dispatcher 已在型別 '{0}' 的 MessageInspector 上叫用 'BeforeSendRequest'。
event_MessageLogEventSizeExceeded=無法記錄訊息，因為它已超過 ETW 事件大小
event_MessageLogInfo={0}
event_MessageLogWarning={0}
event_MessageQueueDuplicatedSocketComplete=MessageQueueDuplicatedSocketComplete
event_MessageQueueDuplicatedSocketError=訊息佇列無法複製通訊端。
event_MessageQueueRegisterAbort=URI:'{1}' 的訊息佇列登錄已中止，狀態為:'{0}'。
event_MessageQueueRegisterCompleted=URI '{0}' 的訊息佇列登錄已完成。
event_MessageQueueRegisterFailed=URI:'{0}' 的訊息佇列登錄失敗，狀態為:'{1}'。
event_MessageQueueRegisterStart=訊息佇列登錄開始。
event_MessageQueueUnregisterSucceeded=為 URI:'{0}' 解除登錄訊息佇列成功。
event_MessageReadByEncoder=編碼器讀取大小為 '{0}' 位元組的訊息。
event_MessageReceivedByTransport=傳輸收到來自 '{0}' 的訊息。
event_MessageReceivedFromTransport=Dispatcher 收到來自傳輸的訊息。相互關聯識別碼 == '{0}'。
event_MessageSentByTransport=傳輸已傳送訊息到 '{0}'。
event_MessageSentToTransport=Dispatcher 已傳送訊息到傳輸。相互關聯識別碼 == '{0}'。
event_MessageThrottleAtSeventyPercent='{1}' 的 '{0}' 節流限制為 70%%。
event_MessageThrottleExceeded=已達到 '{1}' 的 '{0}' 節流限制。
event_MessageWrittenAsynchronouslyByEncoder=訊息由編碼器非同步寫入。
event_MessageWrittenByEncoder=編碼器寫入大小為 '{0}' 位元組的訊息。
event_MtomMessageDecodingStart=MtomMessageEncoder 開始解碼訊息。
event_MtomMessageEncodingStart=MtomMessageEncoder 開始編碼訊息。
event_NamedPipeCreated=NamedPipe '{0}' 已建立。
event_NegotiateTokenAuthenticatorStateCacheExceeded={0}
event_NegotiateTokenAuthenticatorStateCacheRatio=交涉權杖驗證器狀態快取比率: {0}/{1}
event_OpenListenerChannelInstanceFailed=錯誤碼:{0}
event_OpenTimeout={0}
event_OperationCompleted=OperationInvoker 已完成對 '{0}' 方法的呼叫。方法呼叫持續時間為 '{1}' 毫秒。
event_OperationFailed=由 OperationInvoker 叫用時，'{0}' 方法擲回未處理的例外狀況。方法呼叫持續時間為 '{1}' 毫秒。
event_OperationFaulted=由 OperationInvoker 叫用時，'{0}' 方法擲回 FaultException。方法呼叫持續時間為 '{1}' 毫秒。
event_OperationInvoked=OperationInvoker 已叫用 '{0}' 方法。呼叫者資訊: '{1}'。
event_OutboundConnectionsPerEndpointRatio=每個端點的傳出連接比例: {0}/{1}
event_OutgoingMessageSecured=外寄郵件受到保護。
event_ParameterInspectorAfterCallInvoked=Dispatcher 已在型別 '{0}' 的 ParameterInspector 上叫用 'AfterCall'。
event_ParameterInspectorBeforeCallInvoked=Dispatcher 已在型別 '{0}' 的 ParameterInspector 上叫用 'BeforeCall'。
event_PendingAcceptsAtZero=沒有擱置中訊息待接受
event_PendingConnectionsRatio=擱置中的連接比例: {0}/{1}
event_PendingMessagesPerChannelRatio=每個通道的擱置中訊息比例: {0}/{1}
event_PendingSessionQueueFull='{0}' 的工作階段分派失敗，因為擱置中的工作階段佇列已填滿 '{1}' 擱置中的項目。
event_PendingSessionQueueRatio=擱置中的工作階段佇列比例: {0}/{1}
event_PipeConnectionAcceptStart=管道連線接受已在 {0} 上啟動。
event_PipeConnectionAcceptStop=接受管道連線。
event_PipeSharedMemoryCreated=管線共用記憶體建立在 '{0}'。
event_PipeTransportListenerListeningStart=uri:{0} 上的管線傳輸接聽項接聽開始。
event_PipeTransportListenerListeningStop=管道傳輸接聽項接聽停止。
event_PortSharingDuplicatedSocket={0} 的通訊端重複。
event_PrincipalSettingFromSessionTokenStarted=已開始從工作階段權杖設定主體。
event_PrincipalSettingFromSessionTokenSuccess=已成功從工作階段權杖設定主體。
event_QueryCompositionExecuted=使用 '{0}' 的查詢撰寫已在要求 URI 上執行: '{1}'。
event_QueuingSqlRetry=佇列 SQL 重試，但延遲 {0} 毫秒。
event_ReadPoolMiss=建立新的 '{0}'
event_ReceiveContextAbandonFailed=無法放棄 {0}。
event_ReceiveContextAbandonWithException=已放棄 {0}，發生例外狀況 {1}。
event_ReceiveContextCompleteFailed=無法完成 {0}。
event_ReceiveContextFaulted=接收內容發生錯誤。
event_ReceiveRetryCountReached=在識別碼為 '{0}' 之 MSMQ 訊息上已達接收重試計數
event_ReceiveTimeout={0}
event_ReliableSessionChannelFaulted=SessionId:{0} 發生錯誤。
event_RenewLockSystemError=無法延長鎖定期限，已超過鎖定期限或已刪除鎖定擁有人。正在中止 SqlWorkflowInstanceStore。
event_ResumeSignpostEvent=活動界限。
event_RetryingSqlCommandDueToSqlError=重試 SQL 命令，因為出現 SQL 錯誤代碼 {0}。
event_RoutingServiceAbandoningReceiveContext=路由服務正在為下列識別碼的訊息呼叫 ReceiveContext.Abandon: '{0}'。
event_RoutingServiceAbortingChannel=路由服務正在通道 '{0}' 上呼叫中止。
event_RoutingServiceChannelFaulted=路由服務用戶端 '{0}' 發生錯誤。
event_RoutingServiceCloseFailed=關閉傳出用戶端 '{0}' 時路由服務失敗。
event_RoutingServiceClosingClient=路由服務正在關閉用戶端 '{0}'。
event_RoutingServiceCommittingTransaction=路由服務正在認可下列識別碼的交易: '{0}'。
event_RoutingServiceCompletingOneWay=路由服務單向訊息即將完成。
event_RoutingServiceCompletingReceiveContext=路由服務正在為下列識別碼的訊息呼叫 ReceiveContext.Complete: '{0}'。
event_RoutingServiceCompletingTwoWay=路由服務要求回覆訊息即將完成。
event_RoutingServiceConfigurationApplied=已對路由服務套用新的 RoutingConfiguration。
event_RoutingServiceCreatingClientForEndpoint=路由服務正在為下列端點建立用戶端: '{0}'。
event_RoutingServiceCreatingTransaction=路由服務為處理訊息，已建立識別碼為 '{0}' 的新交易。
event_RoutingServiceDisplayConfig=路由服務已設定 RouteOnHeadersOnly: {0}，SoapProcessingEnabled: {1}，EnsureOrderedDispatch: {2}。
event_RoutingServiceDuplexCallbackException=路由服務元件 {0} 遇到雙工回呼例外狀況。
event_RoutingServiceFilterTableMatchStart=路由服務 MessageFilterTable 比對開始。
event_RoutingServiceFilterTableMatchStop=路由服務 MessageFilterTable 比對停止。
event_RoutingServiceHandledException=路由服務已經處理過例外狀況。
event_RoutingServiceMessageRoutedToEndpoints=路由服務將識別碼 '{0}' 的訊息傳送到 {1} 端點清單。
event_RoutingServiceProcessingFailure=處理位址 '{0}' 的端點上的訊息時，路由服務失敗。
event_RoutingServiceProcessingMessage=路由服務正在處理訊息，識別碼: '{0}'，動作: '{1}'，輸入 URL: '{2}' 接收於交易: {3}。
event_RoutingServiceSendingFaultResponse=路由服務正在傳回動作為 '{0}' 的錯誤回應訊息。
event_RoutingServiceSendingResponse=路由服務正在傳回動作為 '{0}' 的回應訊息。
event_RoutingServiceTransmitFailed=傳送至 '{0}' 時，路由服務失敗。
event_RoutingServiceUsingExistingTransaction=路由服務會使用現有的交易 '{0}' 傳送訊息。
event_RoutingTableLookupStart=路由表查閱已啟動。
event_RoutingTableLookupStop=路由表查閱已完成。
event_RunnableInstancesDetectionError=偵測可執行的執行個體失敗，因為發生下列例外狀況
event_RuntimeTransactionComplete=執行階段交易已完成，狀態為 '{0}'。
event_RuntimeTransactionCompletionRequested=活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 已排程執行階段交易的完成。
event_RuntimeTransactionSet=活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 已設定執行階段交易。執行已隔離到活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_ScheduleBookmarkWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 BookmarkWorkItem。BookmarkName: {3}、BookmarkScope: {4}。
event_ScheduleCancelActivityWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 CancelActivityWorkItem。
event_ScheduleCompletionWorkItem=已經為父活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 CompletionWorkItem。已完成活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_ScheduleExecuteActivityWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 ExecuteActivityWorkItem。
event_ScheduleFaultWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 FaultWorkItem。例外狀況傳播源自活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_ScheduleRuntimeWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程執行階段工作項目。
event_ScheduleTransactionContextWorkItem=已經為活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 排程 TransactionContextWorkItem。
event_SecurityIdentityVerificationFailure=安全性驗證失敗。
event_SecurityIdentityVerificationSuccess=安全性驗證成功。
event_SecurityImpersonationFailure=安全性模擬失敗。
event_SecurityImpersonationSuccess=安全性模擬成功。
event_SecurityNegotiationProcessingFailure=安全性交涉處理失敗。
event_SecurityNegotiationStart=安全性交涉已啟動。
event_SecurityNegotiationStop=安全性交涉已完成。
event_SecuritySessionRatio=安全性工作階段比例: {0}/{1}
event_SecurityTokenProviderOpened=SecurityTokenProvider 開啟已完成。
event_SendMessageChannelCacheMiss=SendMessageChannelCache 遺漏
event_SendTimeout={0}
event_SequenceAcknowledgementSent=SessionId:{0} 認可已傳送。
event_ServerMaxPooledConnectionsQuotaReached=到達伺服器最大的共用連線配額。
event_ServiceActivationAvailableMemory=可用的記憶體 (位元組): {0}
event_ServiceActivationException=無法啟動服務。例外狀況詳細資料: {0}
event_ServiceActivationStart=服務啟用開始
event_ServiceActivationStop=服務啟用停止
event_ServiceChannelBeginCallStart=ServiceChannel 非同步呼叫已啟動。
event_ServiceChannelCallStart=ServiceChannelCall 已啟動。
event_ServiceChannelCallStop=用戶端已完成執行與 '{1}' 合約關聯的 '{0}' 動作。訊息已傳送到 '{2}'。
event_ServiceChannelOpenStart=ServiceChannelOpen 已啟動。
event_ServiceChannelOpenStop=ServiceChannelOpen 已完成。
event_ServiceEndpointAdded=已經針對位址 '{0}'、繫結 '{1}' 和合約 '{2}' 加入服務端點。
event_ServiceException=訊息處理期間發生類型 '{1}' 的未處理例外狀況。完整例外狀況詳細資料: {0}。
event_ServiceHostFactoryCreationStart=ServiceHostFactory 開始建立
event_ServiceHostFactoryCreationStop=ServiceHostFactory 結束建立
event_ServiceHostFaulted=服務主機發生錯誤。
event_ServiceHostOpenStart=ServiceHost 開啟已啟動。
event_ServiceHostOpenStop=ServiceHost 開啟已完成。
event_ServiceHostStarted=ServiceHost 已啟動: '{0}'。
event_ServiceSecurityNegotiationCompleted=服務安全性交涉已完成。
event_ServiceStartPipeError=服務啟動管道時發生錯誤。
event_SessionCookieReadingStarted=已開始從工作階段 Cookie 讀取工作階段權杖。
event_SessionCookieReadingSuccess=已成功從工作階段 Cookie 讀取工作階段權杖。
event_SessionIdleTimeout=工作階段正在中止閒置的 URI 通道: '{0}'。
event_SessionPreambleUnderstood=了解 '{0}' 的工作階段前序編碼。
event_SharedListenerProxyRegisterFailed=SharedListenerProxy 登錄失敗，狀態為 '{0}'。
event_SharedListenerProxyRegisterStart=已啟動 URI '{0}' 的 SharedListenerProxy 登錄。
event_SharedListenerProxyRegisterStop=SharedListenerProxy 登錄停止。
event_ShipAssertExceptionMessage=發生未預期的失敗。應用程式不應嘗試處理這個錯誤。為方便診斷，這個英文訊息與下列失敗相關: {0}。
event_SignatureVerificationStart=簽章驗證已啟動。
event_SignatureVerificationSuccess=簽章驗證成功
event_SocketAcceptClosed=通訊端接受已關閉。
event_SocketAccepted=ListenerId:{0} 已接受 SocketId:{1}。
event_SocketAcceptEnqueued=連接接受已啟動。
event_SocketAsyncReadStop=SocketId:{0} 已讀取從 '{2}' 讀取的 '{1}' 個位元組。
event_SocketAsyncWriteStart=SocketId:{0} 將 '{1}' 個位元組寫入 '{2}'。
event_SocketConnectionAbort=正在中止 SocketId:{0}。
event_SocketReadStop=SocketId:{0} 已讀取從 '{2}' 讀取的 '{1}' 個位元組。
event_SocketWriteStart=SocketId:{0} 將 '{1}' 個位元組寫入 '{2}'。
event_SqlExceptionCaught=攔截到 SQL 例外狀況編號 {0} 訊息 {1}。
event_SslOnAcceptUpgrade=SslOnAcceptUpgradeStop
event_SslOnInitiateUpgrade=SslOnAcceptUpgradeStart
event_StartBookmarkWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 BookmarkWorkItem。BookmarkName: {3}、BookmarkScope: {4}。
event_StartCancelActivityWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 CancelActivityWorkItem。
event_StartCompletionWorkItem=開始執行父活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 CompletionWorkItem。已完成活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_StartExecuteActivityWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 ExecuteActivityWorkItem。
event_StartFaultWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 FaultWorkItem。例外狀況傳播源自活動 '{3}'、DisplayName: '{4}'、InstanceId: '{5}'。
event_StartRuntimeWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的執行階段工作項目。
event_StartSignpostEvent=活動界限。
event_StartSignpostEvent1=活動界限。
event_StartSqlCommandExecute=開始 SQL 命令執行: {0}
event_StartTransactionContextWorkItem=開始執行活動 '{0}'、DisplayName: '{1}'、InstanceId: '{2}' 的 TransactionContextWorkItem。
event_StopSignpostEvent=活動界限。
event_StopSignpostEvent1=活動界限。
event_StreamedMessageReadByEncoder=資料流訊息由編碼器讀取。
event_StreamedMessageWrittenByEncoder=資料流訊息由編碼器寫入。
event_SuspendSignpostEvent=活動界限。
event_SwitchCaseNotFound=Switch 活動 '{0}' 找不到符合運算式結果的 Case 活動。
event_SynchronizationContextReset=SynchronizationContext 已由 DiscoveryClientChannel 重設為其原始值 {0}。
event_SynchronizationContextSetToNull=在初始化尋找作業之前，SynchronizationContext 已由 DiscoveryClientChannel 設定為 null。
event_TcpConnectionResetError=遠端位址 {1} 的 SocketId:{0} 發生連線重設錯誤。
event_TcpConnectionTimedOut=遠端位址 {1} 的 SocketId:{0} 逾時。
event_TcpTransportListenerListeningStart=開始在 URI:'{0}' 上接聽 Tcp 傳輸接聽項。
event_TcpTransportListenerListeningStop=Tcp 傳輸接聽項正在接聽。
event_TextMessageDecodingStart=TextMessageEncoder 開始解碼訊息。
event_TextMessageEncodingStart=TextMessageEncoder 開始編碼訊息。
event_ThrowingEtwException=正在擲回例外狀況。來源: {0}。例外狀況詳細資料: {1}
event_ThrowingEtwExceptionVerbose=正在擲回例外狀況。來源: {0}。例外狀況詳細資料: {1}
event_ThrowingException=正在擲回例外狀況。來源: {0}。例外狀況詳細資料: {1}
event_ThrowingExceptionVerbose=正在擲回例外狀況。來源: {0}。例外狀況詳細資料: {1}
event_TimeoutOpeningSqlConnection=嘗試開啟 SQL 連接時發生逾時。無法在預定逾時 {0} 內完成作業。分配給此作業的時間可能是較長逾時的一部分。
event_TokenValidationFailure=SecurityToken (類型 '{0}' 和 ID '{1}') 驗證失敗。{2}
event_TokenValidationStarted=SecurityToken (類型 '{0}' 和 ID '{1}') 驗證已開始。
event_TokenValidationSuccess=SecurityToken (類型 '{0}' 和 ID '{1}') 驗證成功。
event_TraceCodeEventLogCritical=已寫入 EventLog。
event_TraceCodeEventLogError=已寫入 EventLog。
event_TraceCodeEventLogInfo=已寫入 EventLog。
event_TraceCodeEventLogVerbose=已寫入 EventLog。
event_TraceCodeEventLogWarning=已寫入 EventLog。
event_TraceCorrelationKeys=在父系範圍 '{2}' 中使用值 '{1}' 計算相互關聯索引鍵 '{0}'。
event_TrackingDataExtracted=追蹤在活動 {1} 中擷取到的資料 {0}。
event_TrackingProfileNotFound=找不到 ActivityDefinitionId '{1}' 的 TrackingProfile '{0}'。在組態檔中找不到 TrackingProfile，或者 ActivityDefinitionId 不相符。
event_TrackingRecordDropped=追蹤記錄 {0} 的大小已超出提供者 {1} 的 ETW 工作階段所允許的最大值
event_TrackingRecordRaised=追蹤記錄 {0} 提升至 {1}。
event_TrackingRecordTruncated=已將截斷的追蹤記錄 {0} 寫入提供者 {1} 的 ETW 工作階段。變數/附註/使用者資料已移除
event_TrackingValueNotSerializable=擷取的引數/變數 '{0}' 不可序列化。
event_TransactedReceiveScopeEndCommitFailed=呼叫識別碼 = '{0}' 之 CommittableTransaction 上的 EndCommit 擲回 TransactionException，並出現下列訊息: '{1}'。
event_TransactionScopeCreate=TransactionScope 是以 LocalIdentifier:'{0}' 和 DistributedIdentifier:'{1}' 建立的。
event_TransferEmitted=已發出傳輸事件。
event_TransportListenerSessionsReceived=透過 '{0}' 與傳輸接聽項工作階段一起接收
event_TryCatchExceptionDuringCancelation=TryCatch 活動 '{0}' 的子活動在取消期間擲回例外狀況。
event_TryCatchExceptionFromCatchOrFinally=與 TryCatch 活動 '{0}' 關聯的 Catch 或 Finally 活動擲回例外狀況。
event_TryCatchExceptionFromTry=TryCatch 活動 '{0}' 攔截到型別 '{1}' 的例外狀況。
event_UnhandledException=未處理的例外狀況。例外狀況詳細資料: {0}
event_UnlockInstanceException=嘗試解除鎖定執行個體時，發生例外狀況 {0}。
event_UserEvents=名稱: '{0}'，參考: '{1}'，承載: {2}
event_WasCloseAllListenerChannelInstancesCompleted=已關閉所有完成的接聽項通道執行個體。
event_WasCloseAllListenerChannelInstancesFailed=錯誤碼:{0}
event_WasConnected=WAS 已連線。
event_WasConnectionTimedout=WAS 連線逾時。
event_WasDisconnected=WAS 已中斷連線。
event_WebHostRequestStart=已從 AppDomain '{0}' 接收虛擬路徑為 '{1}' 的要求。
event_WebHostRequestStop=WebHostRequest 停止。
event_WebhostUnregisterProtocolFailed=錯誤碼:{0}
event_WebSocketAsyncReadStart=WebSocketId:{0} 開始讀取。
event_WebSocketAsyncReadStop=WebSocketId:{0} 從 '{2}' 中讀取 '{1}' 個位元組。
event_WebSocketAsyncWriteStart=WebSocketId:{0} 將 '{1}' 個位元組寫入 '{2}'。
event_WebSocketAsyncWriteStop=WebSocketId:{0} 非同步寫入停止。
event_WebSocketCloseOutputSent=WebSocketId:{0} 將關閉輸出訊息傳送至具有關閉狀態 '{2}' 的 '{1}'。
event_WebSocketCloseSent=WebSocketId:{0} 將關閉訊息傳送至具有關閉狀態 '{2}' 的 '{1}'。
event_WebSocketCloseStatusReceived=WebSocketId:{0} 收到具有狀態 '{1}' 的連接關閉訊息。
event_WebSocketConnectionAborted=WebSocketId:{0} 連接已中止。
event_WebSocketConnectionAccepted=WebSocketId:{0} 已接受連接。
event_WebSocketConnectionAcceptStart=WebSocket 開始接受連接。
event_WebSocketConnectionClosed=WebSocketId:{0} 已關閉連接。
event_WebSocketConnectionDeclined=WebSocket 連接遭拒，狀態碼為 '{0}'
event_WebSocketConnectionFailed=WebSocket 連接要求失敗: '{0}'
event_WebSocketConnectionRequestSendStart='{0}' 的 WebSocket 連接要求開始傳送。
event_WebSocketConnectionRequestSendStop=WebSocketId:{0} 已傳送連接要求。
event_WebSocketCreateClientWebSocketWithFactory=正在建立工廠型別 '{0}' 的用戶端 WebSocket。
event_WebSocketUseVersionFromClientWebSocketFactory=正在使用來自型別為 '{0}' 的用戶端 WebSocket 工廠的 WebSocketVersion。
event_WfMessageReceived=工作流程所接收的訊息
event_WfMessageSent=從工作流程傳送的訊息
event_WindowsStreamSecurityOnAcceptUpgrade=Windows 接受升級的資料流安全性。
event_WindowsStreamSecurityOnInitiateUpgrade=WindowsStreamSecurity 正在初始化安全性升級。
event_WorkflowActivityResume=WorkflowInstance 識別碼: '{0}' E2E 活動
event_WorkflowActivityStart=WorkflowInstance 識別碼: '{0}' E2E 活動
event_WorkflowActivityStop=WorkflowInstance 識別碼: '{0}' E2E 活動
event_WorkflowActivitySuspend=WorkflowInstance 識別碼: '{0}' E2E 活動
event_WorkflowApplicationCompleted=WorkflowInstance 識別碼: '{0}' 已經以 Closed 狀態完成。
event_WorkflowApplicationIdled=WorkflowApplication 識別碼: '{0}' 進入閒置狀態。
event_WorkflowApplicationPersistableIdle=WorkflowApplication 識別碼: '{0}' 處於閒置狀態且為永續性。將採取下列動作: {1}。
event_WorkflowApplicationPersisted=WorkflowApplication 識別碼: '{0}' 是永續性的。
event_WorkflowApplicationTerminated=WorkflowApplication 識別碼: '{0}' 已終止。它已經以 Faulted 狀態完成，發生例外狀況。
event_WorkflowApplicationUnhandledException=WorkflowInstance 識別碼: '{0}' 發現未處理的例外狀況。例外狀況源自活動 '{1}'、DisplayName: '{2}'。將採取下列動作: {3}。
event_WorkflowApplicationUnloaded=WorkflowInstance 識別碼: '{0}' 已卸載。
event_WorkflowInstanceAborted=WorkflowInstance 識別碼: '{0}' 已中止，發生例外狀況。
event_WorkflowInstanceAbortedRecordWithId=TrackRecord = WorkflowInstanceAbortedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4},  Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}
event_WorkflowInstanceCanceled=WorkflowInstance 識別碼: '{0}' 已經以 Canceled 狀態完成。
event_WorkflowInstanceRecordWithId=TrackRecord= WorkflowInstanceRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, State = {4}, Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}
event_WorkflowInstanceSuspendedRecord=TrackRecord = WorkflowInstanceSuspendedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}
event_WorkflowInstanceSuspendedRecordWithId=TrackRecord = WorkflowInstanceSuspendedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}
event_WorkflowInstanceTerminatedRecord=TrackRecord = WorkflowInstanceTerminatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}
event_WorkflowInstanceTerminatedRecordWithId=TrackRecord = WorkflowInstanceTerminatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4},  Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}
event_WorkflowInstanceUnhandledExceptionRecordWithId=TrackRecord = WorkflowInstanceUnhandledExceptionRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, SourceName = {4}, SourceId = {5}, SourceInstanceId = {6}, SourceTypeName={7}, Exception={8},  Annotations= {9}, ProfileName = {10}, WorkflowDefinitionIdentity = {11}
event_WorkflowInstanceUpdatedRecord=TrackRecord= WorkflowInstanceUpdatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, State = {4}, OriginalDefinitionIdentity = {5}, UpdatedDefinitionIdentity = {6}, Annotations = {7}, ProfileName = {8}
event_WrappedKeyDecryptionStart=已開始解密包裝的金鑰。
event_WrappedKeyDecryptionSuccess=已成功解密包裝的金鑰。
event_WritePoolMiss=建立新的 '{0}'
event_XamlServicesLoadStart=XamlServicesLoad 開始
event_XamlServicesLoadStop=XamlServicesLoad 停止
keyword_ActivationServices=啟用服務
keyword_Channel=通道
keyword_Discovery=探索
keyword_EndToEndMonitoring=端對端監控
keyword_HealthMonitoring=狀況監控
keyword_HTTP=HTTP 傳輸
keyword_Infrastructure=基礎結構
keyword_Quota=配額
keyword_RoutingServices=路由服務
keyword_Security=安全性
keyword_Serialization=序列化
keyword_ServiceHost=服務主機
keyword_ServiceModel=ServiceModel
keyword_TCP=TCP 傳輸
keyword_Threading=執行緒
keyword_Transaction=交易
keyword_TransportGeneral=一般傳輸
keyword_Troubleshooting=疑難排解
keyword_UserEvents=使用者事件
keyword_WCFMessageLogging=WCF 訊息記錄
keyword_WebHost=Web 主機
keyword_WebHTTP=Web HTTP
keyword_WFActivities=工作流程活動
keyword_WFInstanceStore=工作流程 InstanceStore
keyword_WFRuntime=工作流程執行階段
keyword_WFServices=工作流程 ServiceHost
keyword_WFTracking=WF 追蹤
opcode_BufferOutOfOrderNoBookmark=NoBookmark
opcode_BufferOutOfOrderNoInstance=NoInstance
opcode_BufferPoolingAllocate=配置
opcode_BufferPoolingTune=調整
opcode_ClientRuntimeClientChannelOpenStart=ClientChannelOpenStart
opcode_ClientRuntimeClientChannelOpenStop=ClientChannelOpenStop
opcode_ClientRuntimeClientMessageInspectorAfterReceiveInvoked=ClientMessageInspectorAfterReceiveInvoked
opcode_ClientRuntimeClientMessageInspectorBeforeSendInvoked=ClientMessageInspectorBeforeSendInvoked
opcode_ClientRuntimeClientParameterInspectorStart=ClientParameterInspectorStart
opcode_ClientRuntimeClientParameterInspectorStop=ClientParameterInspectorStop
opcode_ClientRuntimeOperationPrepared=OperationPrepared
opcode_CompleteWorkItemCompleteBookmark=CompleteBookmark
opcode_CompleteWorkItemCompleteCancelActivity=CompleteCancelActivity
opcode_CompleteWorkItemCompleteCompletion=CompleteCompletion
opcode_CompleteWorkItemCompleteExecuteActivity=CompleteExecuteActivity
opcode_CompleteWorkItemCompleteFault=CompleteFault
opcode_CompleteWorkItemCompleteRuntime=CompleteRuntime
opcode_CompleteWorkItemCompleteTransactionContext=CompleteTransactionContext
opcode_CorrelationDuplicateQuery=DuplicateQuery
opcode_DiscoveryClientChannelCreationFailed=CreationFailed
opcode_DiscoveryClientChannelFindInitiated=FindInitiated
opcode_DiscoveryClientChannelOpenFailed=OpenFailed
opcode_DiscoveryClientChannelOpenSucceeded=OpenSucceeded
opcode_DiscoveryClientExceptionSuppressed=ExceptionSuppressed
opcode_DiscoveryClientFailedToClose=FailedToClose
opcode_DiscoveryClientReceivedMulticastSuppression=ReceivedMulticastSuppression
opcode_DiscoveryMessageDuplicate=重複
opcode_DiscoveryMessageInvalidContent=InvalidContent
opcode_DiscoveryMessageInvalidRelatesToOrOperationCompleted=InvalidRelatesToOrOperationCompleted
opcode_DiscoveryMessageInvalidReplyTo=InvalidReplyTo
opcode_DiscoveryMessageNoContent=NoContent
opcode_DiscoveryMessageNullMessageId=NullMessageId
opcode_DiscoveryMessageNullMessageSequence=NullMessageSequence
opcode_DiscoveryMessageNullRelatesTo=NullRelatesTo
opcode_DiscoveryMessageNullReplyTo=NullReplyTo
opcode_DiscoveryMessageReceivedAfterOperationCompleted=ReceivedAfterOperationCompleted
opcode_DiscoverySynchronizationContextReset=重設
opcode_DiscoverySynchronizationContextSetToNull=SetToNull
opcode_DispatchMessageBeforeAuthorization=BeforeAuthorization
opcode_DispatchMessageDispatchStart=DispatchStart
opcode_DispatchMessageDispatchStop=DispatchStop
opcode_DispatchMessageDispathMessageInspectorAfterReceiveInvoked=DispathMessageInspectorAfterReceiveInvoked
opcode_DispatchMessageDispathMessageInspectorBeforeSendInvoked=DispathMessageInspectorBeforeSendInvoked
opcode_DispatchMessageOperationInvokerStart=OperationInvokerStart
opcode_DispatchMessageOperationInvokerStop=OperationInvokerStop
opcode_DispatchMessageParameterInspectorStart=ParameterInspectorStart
opcode_DispatchMessageParameterInspectorStop=ParameterInspectorStop
opcode_DispatchMessageTransactionScopeCreate=TransactionScopeCreate
opcode_EndpointDiscoverabilityDisabled=已停用
opcode_EndpointDiscoverabilityEnabled=已啟用
opcode_ExecuteFlowchartBegin=開始
opcode_ExecuteFlowchartEmpty=空白
opcode_ExecuteFlowchartNextNull=NextNull
opcode_ExecuteFlowchartSwitchCase=SwitchCase
opcode_ExecuteFlowchartSwitchCaseNotFound=SwitchCaseNotFound
opcode_ExecuteFlowchartSwitchDefault=SwitchDefault
opcode_ExpressionResultArrayItemValue=ArrayItemValue
opcode_ExpressionResultBinary=二進位
opcode_ExpressionResultMemberAccess=MemberAccess
opcode_ExpressionResultUnary=一元
opcode_InferDescriptionContract=合約
opcode_InferDescriptionOperation=作業
opcode_InvokeMethodDoesNotUseAsyncPattern=DoesNotUseAsyncPattern
opcode_InvokeMethodIsNotStatic=IsNotStatic
opcode_InvokeMethodIsStatic=IsStatic
opcode_InvokeMethodThrewException=ThrewException
opcode_InvokeMethodUseAsyncPattern=UseAsyncPattern
opcode_MessageChannelCacheMissed=遺漏
opcode_ReliableSessionFaulted=發生錯誤
opcode_ReliableSessionReconnect=重新連線
opcode_ReliableSessionSequenceAck=SequenceAck
opcode_RoutingServiceAbortingChannel=AbortingChannel
opcode_RoutingServiceClientChannelFaulted=ChannelFaulted
opcode_RoutingServiceClientClosing=關閉
opcode_RoutingServiceClientCreatingForEndpoint=CreatingForEndpoint
opcode_RoutingServiceCloseFailed=CloseFailed
opcode_RoutingServiceConfigurationApplied=ConfigurationApplied
opcode_RoutingServiceDuplexCallbackException=DuplexCallbackException
opcode_RoutingServiceHandledException=HandledException
opcode_RoutingServiceMessageCompletingOneWay=CompletingOneWay
opcode_RoutingServiceMessageCompletingTwoWay=CompletingTwoWay
opcode_RoutingServiceMessageMovedToBackup=MovedToBackup
opcode_RoutingServiceMessageProcessingFailure=ProcessingFailure
opcode_RoutingServiceMessageProcessingMessage=ProcessingMessage
opcode_RoutingServiceMessageRoutedToEndpoints=RoutedToEndpoints
opcode_RoutingServiceMessageSendingFaultResponse=SendingFaultResponse
opcode_RoutingServiceMessageSendingResponse=SendingResponse
opcode_RoutingServiceMessageTransmitSucceeded=TransmitSucceeded
opcode_RoutingServiceMessageTransmittingMessage=TransmittingMessage
opcode_RoutingServiceReceiveContextAbandoning=放棄
opcode_RoutingServiceReceiveContextCompleting=正在完成
opcode_RoutingServiceTransactionCommittingTransaction=CommittingTransaction
opcode_RoutingServiceTransactionCreating=正在建立
opcode_RoutingServiceTransactionUsingExisting=UsingExisting
opcode_RoutingServiceTransmitFailed=TransmitFailed
opcode_RuntimeTransactionComplete=完成
opcode_RuntimeTransactionCompletionRequested=CompletionRequested
opcode_RuntimeTransactionSet=設定
opcode_ScheduleWorkItemScheduleBookmark=ScheduleBookmark
opcode_ScheduleWorkItemScheduleCancelActivity=ScheduleCancelActivity
opcode_ScheduleWorkItemScheduleCompletion=ScheduleCompletion
opcode_ScheduleWorkItemScheduleExecuteActivity=ScheduleExecuteActivity
opcode_ScheduleWorkItemScheduleFault=ScheduleFault
opcode_ScheduleWorkItemScheduleRuntime=ScheduleRuntime
opcode_ScheduleWorkItemScheduleTransactionContext=ScheduleTransactionContext
opcode_SessionUpgradeAccept=接受
opcode_SessionUpgradeInitiate=初始化
opcode_Signpostsuspend=暫止
opcode_StartWorkItemStartBookmark=StartBookmark
opcode_StartWorkItemStartCancelActivity=StartCancelActivity
opcode_StartWorkItemStartCompletion=StartCompletion
opcode_StartWorkItemStartExecuteActivity=StartExecuteActivity
opcode_StartWorkItemStartFault=StartFault
opcode_StartWorkItemStartRuntime=StartRuntime
opcode_StartWorkItemStartTransactionContext=StartTransactionContext
opcode_TrackingProfileNotFound=NotFound
opcode_TrackingRecordDropped=已卸除
opcode_TrackingRecordRaised=已引發
opcode_TrackingRecordTruncated=已截斷
opcode_TransportReceiveBeforeAuthentication=BeforeAuthentication
opcode_TryCatchExceptionDuringCancelation=DuringCancelation
opcode_TryCatchExceptionFromCatchOrFinally=FromCatchOrFinally
opcode_TryCatchExceptionFromTry=FromTry
opcode_WASActivationConnected=已連線
opcode_WASActivationDisconnect=已中斷連線
opcode_WFApplicationStateChangeCompleted=已完成
opcode_WFApplicationStateChangeIdled=已閒置
opcode_WFApplicationStateChangeInstanceAborted=InstanceAborted
opcode_WFApplicationStateChangeInstanceCanceled=InstanceCanceled
opcode_WFApplicationStateChangePersistableIdle=PersistableIdle
opcode_WFApplicationStateChangePersisted=已保存
opcode_WFApplicationStateChangeTerminated=已終止
opcode_WFApplicationStateChangeUnhandledException=UnhandledException
opcode_WFApplicationStateChangeUnloaded=已卸載
opcode_WorkflowActivitysuspend=暫止
opcode_WorkflowInstanceRecordAbortedRecord=AbortedRecord
opcode_WorkflowInstanceRecordAbortedWithId=AbortedWithId
opcode_WorkflowInstanceRecordSuspendedRecord=SuspendedRecord
opcode_WorkflowInstanceRecordSuspendedWithId=SuspendedWithId
opcode_WorkflowInstanceRecordTerminatedRecord=TerminatedRecord
opcode_WorkflowInstanceRecordTerminatedWithId=TerminatedWithId
opcode_WorkflowInstanceRecordUnhandledExceptionRecord=UnhandledExceptionRecord
opcode_WorkflowInstanceRecordUnhandledExceptionWithId=UnhandledExceptionWithId
opcode_WorkflowInstanceRecordUpdatedRecord=UpdatedRecord
task_ActivationDispatchSession=ActivationDispatchSession
task_ActivationDuplicateSocket=ActivationDuplicateSocket
task_ActivationListenerOpen=ActivationListenerOpen
task_ActivationPipeListenerListening=ActivationPipeListenerListening
task_ActivationRoutingTableLookup=ActivationRoutingTableLookup
task_ActivationServiceStart=ActivationServiceStart
task_ActivationTcpListenerListening=ActivationTcpListenerListening
task_AddServiceEndpoint=AddServiceEndpoint
task_BufferOutOfOrder=BufferOutOfOrder
task_BufferPooling=BufferPooling
task_CacheRootMetadata=CacheRootMetadata
task_ChannelFactoryCaching=ChannelFactoryCaching
task_ChannelFactoryCreate=ChannelFactoryCreate
task_ChannelReceive=ChannelReceive
task_ClientRuntime=ClientRuntime
task_ClientSendPreamble=ClientSendPreamble
task_CompensationState=CompensationState
task_CompleteActivity=CompleteActivity
task_CompleteWorkItem=CompleteWorkItem
task_Connect=連線
task_ConnectionAbort=ConnectionAbort
task_ConnectionAccept=ConnectionAccept
task_ConnectionPooling=ConnectionPooling
task_Correlation=相互關聯
task_CreateBookmark=CreateBookmark
task_CreateHttpMessageHandler=CreateHttpMessageHandler
task_CreateWorkflowServiceHost=CreateWorkflowServiceHost
task_CustomTrackingRecord=CustomTrackingRecord
task_DataContractResolver=DataContractResolver
task_DiscoveryClient=DiscoveryClient
task_DiscoveryClientChannel=DiscoveryClientChannel
task_DiscoveryMessage=DiscoveryMessage
task_DiscoverySynchronizationContext=DiscoverySynchronizationContext
task_DispatchMessage=DispatchMessage
task_EncryptedDataProcessing=EncryptedDataProcessing
task_EndpointDiscoverability=EndpointDiscoverability
task_ExecuteActivity=ExecuteActivity
task_ExecuteFlowchart=ExecuteFlowchart
task_ExecuteWorkItem=ExecuteWorkItem
task_ExpressionResult=ExpressionResult
task_FederationMessageCreation=FederationMessageCreation
task_FederationMessageProcessing=FederationMessageProcessing
task_FormatterDeserializeReply=FormatterDeserializeReply
task_FormatterDeserializeRequest=FormatterDeserializeRequest
task_FormatterSerializeReply=FormatterSerializeReply
task_FormatterSerializeRequest=FormatterSerializeRequest
task_GenerateDeserializer=GenerateDeserializer
task_GenerateSerializer=GenerateSerializer
task_GenerateXmlSerializable=GenerateXmlSerializable
task_GetIssuerName=GetIssuerName
task_HostedTransportConfigurationManagerConfigInit=HostedTransportConfigurationManagerConfigInit
task_ImportKnownType=ImportKnownType
task_InferDescription=InferDescription
task_InitializeBookmarkScope=InitializeBookmarkScope
task_InternalCacheMetadata=InternalCacheMetadata
task_InvokeMethod=InvokeMethod
task_ListenerOpen=ListenerOpen
task_LockWorkflowInstance=LockWorkflowInstance
task_MessageChannelCache=MessageChannelCache
task_MessageDecoding=MessageDecoding
task_MessageEncoding=MessageEncoding
task_MessageQueueRegister=MessageQueueRegister
task_MsmqQuotas=MsmqQuotas
task_NoPersistBlock=NoPersistBlock
task_PrincipalSetting=PrincipalSetting
task_Quotas=配額
task_ReliableSession=ReliableSession
task_RoutingService=RoutingService
task_RoutingServiceClient=RoutingServiceClient
task_RoutingServiceFilterTableMatch=RoutingServiceFilterTableMatch
task_RoutingServiceMessage=RoutingServiceMessage
task_RoutingServiceReceiveContext=RoutingServiceReceiveContext
task_RoutingServiceTransaction=RoutingServiceTransaction
task_RuntimeTransaction=RuntimeTransaction
task_ScheduleActivity=ScheduleActivity
task_ScheduleWorkItem=ScheduleWorkItem
task_SecureMessage=SecureMessage
task_SecurityImpersonation=SecurityImpersonation
task_SecurityNegotiation=SecurityNegotiation
task_SecurityVerification=SecurityVerification
task_ServiceActivation=ServiceActivation
task_ServiceChannelCall=ServiceChannelCall
task_ServiceChannelOpen=ServiceChannelOpen
task_ServiceHostActivation=ServiceHostActivation
task_ServiceHostCompilation=ServiceHostCompilation
task_ServiceHostCreate=ServiceHostCreate
task_ServiceHostFactoryCreation=ServiceHostFactoryCreation
task_ServiceHostFault=ServiceHostFault
task_ServiceHostOpen=ServiceHostOpen
task_ServiceInstance=ServiceInstance
task_ServiceShutdown=ServiceShutdown
task_SessionCookieReading=SessionCookieReading
task_SessionStart=SessionStart
task_SessionUpgrade=SessionUpgrade
task_SignatureVerification=SignatureVerification
task_Signpost=Signpost
task_SqlCommandExecute=SqlCommandExecute
task_StartWorkItem=StartWorkItem
task_SurrogateDeserialize=SurrogateDeserialize
task_SurrogateSerialize=SurrogateSerialize
task_ThreadScheduling=ThreadScheduling
task_Throttles=節流
task_Timeout=等候逾時
task_TimeoutException=TimeoutException
task_TokenValidation=TokenValidation
task_TrackingProfile=TrackingProfile
task_TrackingRecord=TrackingRecord
task_TransportReceive=TransportReceive
task_TransportSend=TransportSend
task_TryCatchException=TryCatchException
task_VBExpressionCompile=VBExpressionCompile
task_WASActivation=WASActivation
task_WebHostRequest=WebHostRequest
task_WFApplicationStateChange=WFApplicationStateChange
task_WFMessage=WFMessage
task_WorkflowActivity=WorkflowActivity
task_WorkflowInstanceRecord=WorkflowInstanceRecord
task_WorkflowTracking=WorkflowTracking
task_WrappedKeyDecryption=WrappedKeyDecryption
task_XamlServicesLoad=XamlServicesLoad
